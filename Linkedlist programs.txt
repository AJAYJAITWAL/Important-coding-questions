1.How do you find the middle element of a singly linked list in one pass?

2.How do you check if a given linked list contains a cycle? How do you find the starting node of the cycle?

3.How do you find the third node from the end in a singly linked list?

4.How do you find the sum of two linked lists using Stack? 

5.How do you reverse a linked list in place?

6.How to add an element in the middle of the linked list?

7.How do you sort a linked list in Java? 

8.How to remove Nth Node from the end of a linked list?

9.How to remove Nth Node from the end of a linked list? 

10.How to merge two sorted linked lists? 

11.How to convert a sorted list to a binary search tree?

12.Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

13.How to remove duplicates from a sorted linked list? 

14.How to find the node at which the intersection of two singly linked lists begins.

15.How to check if a given linked list is a palindrome?

16.How to remove all elements from a linked list of integers which match with given value? 

17.How do you reverse a linked list?

18.How do you reverse a singly linked list without recursion?

19.How are duplicate nodes removed in an unsorted linked list?

20.How do you find the length of a singly linked list?